CREATE OR REPLACE PROCEDURE eemrt.sp_get_funds_summary(
    p_UserId          VARCHAR2 DEFAULT NULL,
    p_CONTRACT_NUMBER VARCHAR2 DEFAULT NULL,
    FUND_TYPE_CURSOR OUT SYS_REFCURSOR,
    contracts_cursor OUT SYS_REFCURSOR,
    TOTAL_FUNDING_CURSOR OUT SYS_REFCURSOR ,
    TOTAL_Hours_CURSOR OUT SYS_REFCURSOR)
IS
  vContractNUM CONTRACT.CONTRACT_NUMBER%TYPE;
  vTotalObligation NUMBER :=0;
BEGIN
  vContractNUM := P_CONTRACT_NUMBER;
  SP_INSERT_AUDIT(p_UserId, 'sp_get_contracts_funds ' || vContractNUM);
  SELECT SUM(QUANTITY_ORDERED)
  INTO vTotalObligation
  FROM DELPHI_CONTRACT_DETAIL
  WHERE CONTRACT_NUMBER = vContractNUM
  AND FISCAL_YEAR      IS NOT NULL ;
  OPEN FUND_TYPE_CURSOR FOR SELECT CONTRACT_NUMBER,
  Total_Obligations,
  Total_Conract_Obligations,
  Total_Obligations_Percentage,
  FUND_TYPE,
  FUND_TYPE_Sort FROM
  (SELECT CONTRACT_NUMBER,
    NVL(SUM(QUANTITY_ORDERED),0)- NVL(SUM(QUANTITY_Cancelled),0) Total_Obligations,
    vTotalObligation Total_Conract_Obligations,
    NVL(SUM(QUANTITY_ORDERED),0) - NVL(SUM(QUANTITY_Cancelled),0) Total_Obligations_Percentage,
    DECODE(FUND_TYPE,'OPS','1OPS', FUND_TYPE) AS FUND_TYPE_Sort,
    FUND_TYPE
  FROM DELPHI_CONTRACT_DETAIL
  WHERE CONTRACT_NUMBER = vContractNUM --'DTFAWA-11-X-80007'
  AND FISCAL_YEAR      IS NOT NULL
  GROUP BY CONTRACT_NUMBER,
    FUND_TYPE ,
    DECODE(FUND_TYPE,'OPS','1OPS', FUND_TYPE)
  ) tbl order by FUND_TYPE_Sort ASC ;
  OPEN contracts_cursor FOR SELECT CONTRACT_NUMBER,
  NVL(SUM(QUANTITY_ORDERED),0)- NVL(SUM(QUANTITY_Cancelled),0) Total_Obligations,
  -- SUM(QUANTITY_ORDERED) / vTotalObligation Total_Obligations_Percentage,
  FISCAL_YEAR FROM DELPHI_CONTRACT_DETAIL WHERE CONTRACT_NUMBER = vContractNUM AND FISCAL_YEAR IS NOT NULL Group by CONTRACT_NUMBER,
  FISCAL_YEAR Order by CONTRACT_NUMBER,
  FISCAL_YEAR ;
  OPEN TOTAL_FUNDING_CURSOR FOR SELECT CONTRACT_NUMBER,
  NVL(SUM(QUANTITY_ORDERED),0)- NVL(SUM(QUANTITY_Cancelled),0) Total_Obligations,
  0
AS
  CeilingValue FROM DELPHI_CONTRACT_DETAIL WHERE CONTRACT_NUMBER = vContractNUM AND FISCAL_YEAR IS NOT NULL Group by CONTRACT_NUMBER ;
  OPEN TOTAL_Hours_CURSOR -- Sum()
  FOR SELECT dc.CONTRACT_NUMBER,
  NVL(SUM( (
  (SELECT NVL(SUM(CLIN_HOURS),0)
  FROM WORK_ORDERS_CLINS WOC
  WHERE WOC.FK_period_of_performance_id = p.PERIOD_OF_PERFORMANCE_ID
  AND WOC.CLIN_ID                      IN
    (SELECT C.CLIN_ID
    FROM pop_clin c
    WHERE c.PERIOD_OF_PERFORMANCE_ID = p.PERIOD_OF_PERFORMANCE_ID
    AND C.Clin_Type                 <> 'Contract'
    )
  ) +
  (SELECT NVL(SUM(WLC.LABOR_CATEGORY_HOURS),0)
  FROM WO_LABOR_CATEGORY WLC
  WHERE WLC.CLIN_ID IN
    (SELECT C.CLIN_ID
    FROM pop_clin c
    WHERE c.PERIOD_OF_PERFORMANCE_ID = p.PERIOD_OF_PERFORMANCE_ID
    )
  ) +
  (SELECT NVL(SUM(CLIN_HOURS),0)
  FROM SUB_TASKS_CLINS WOC
  WHERE WOC.FK_period_of_performance_id = p.PERIOD_OF_PERFORMANCE_ID
  AND WOC.CLIN_ID                      IN
    (SELECT C.CLIN_ID
    FROM pop_clin c
    WHERE c.PERIOD_OF_PERFORMANCE_ID = p.PERIOD_OF_PERFORMANCE_ID
    AND C.Clin_Type                 <> 'Contract'
    )
  ) +
  (SELECT NVL(SUM(WLC.LABOR_CATEGORY_HOURS),0)
  FROM ST_LABOR_CATEGORY WLC
  WHERE WLC.CLIN_ID IN
    (SELECT C.CLIN_ID
    FROM pop_clin c
    WHERE c.PERIOD_OF_PERFORMANCE_ID = p.PERIOD_OF_PERFORMANCE_ID
    )
  ) ) ) , 0)
AS
  Total_Hours,
  0
AS
  CeilingHours FROM CONTRACT dc INNER JOIN PERIOD_OF_PERFORMANCE p ON DC.CONTRACT_NUMBER = P.CONTRACT_NUMBER WHERE DC.CONTRACT_NUMBER = vContractNUM
  -- AND FISCAL_YEAR IS NOT NULL
  Group by DC.CONTRACT_NUMBER ;
END sp_get_funds_summary;
/